name: BasicReleasePipelineWithBuildJob
trigger: none

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
  - repository: Binskim
    type: github
    name: Microsoft/binskim
    ref: refs/heads/main
    endpoint: github.com_1esSecToolsDetectDev 

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: pool-1espt-mseng
      image: pool-1espt-mseng-image
      os: windows

    stages:
    - stage: stage1
      displayName: Build And Test
      jobs:
        - job: linux
          pool:
            name: pool-1espt-linux-mseng-dev
            os: linux
          steps:
          - checkout: self

          - task: UseDotNet@2
            displayName: .NET Core 9 sdk
            inputs:
              version: "9.0.x"
              packageType: sdk

          - task: Bash@3
            displayName: "Build and Test"
            inputs:
              filePath: "BuildAndTest.sh"

        - job: windows
          pool:
            name: pool-1espt-mseng
            image: pool-1espt-mseng-image
            os: windows
          steps:
          - task: UseDotNet@2
            displayName: .NET Core 9 sdk
            inputs:
              version: "9.0.x"
              packageType: sdk

          - checkout: self

          - task: CmdLine@2
            displayName: "Build and Test"
            inputs:
              script: "BuildAndTest.cmd"
          - task: ComponentGovernanceComponentDetection@0

       # - job: mac
       #   pool:
       #     vmImage: "macOS-latest"
       #   steps:
       #   - task: UseDotNet@2
       #     displayName: .NET Core 9 sdk
       #     inputs:
       #       version: "9.0.x"
       #       packageType: sdk

       #   - checkout: self

       #   - task: Bash@3
       #     displayName: "Build and Test"
       #     inputs:
       #       filePath: "BuildAndTest.sh"
       #       failOnStderr: true
       #   - task: Bash@3
       #     displayName: "Run BinSkim"
       #     inputs:
       #       targetType: "inline"
       #       script: "dotnet bld/bin/x64_Release/net9.0/osx-x64/BinSkim.dll analyze src/Test.FunctionalTests.BinSkim.Driver/BaselineTestData/macho.*"

## TBD Release stage - not in scope of this task 
   # - stage: stage2
   #   displayName: Release
   #   dependsOn: stage1
   #   jobs:
   #     - job: BuildJob
   #       displayName: Build Job
   #     # Remove templateContext and outputs if your pipeline does not publish any artifacts. Check here for more details: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/outputs
   #       templateContext:
   #         outputs:
          # Declare outputs here for efficient SDL analysis
   #         - output: pipelineArtifact
   #           targetPath: $(System.DefaultWorkingDirectory)/Samples
   #           artifact:
   #             artifactName: 'artifactName'
   #       steps:
     #   # Add build steps below
   #       - checkout: self
   #       - powershell: echo "Hello World from Job"
   #     - job: release
   #       dependsOn: BuildJob
   #       templateContext:
   #         type: releaseJob
   #         isProduction: True
   #         inputs:
            # Declare inputs to be released here to ensure they receive relevant checks
  #          - input: pipelineArtifact
  #          artifact:
  #            artifactName: "artifactName"
  #        steps:
  #        # Add release steps below
  #        - script: tree.com $(Pipeline.Workspace) /f
  #          displayName: List files
